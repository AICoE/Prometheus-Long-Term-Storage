diff --git a/marcel_vs_upstream_standalone.patch b/marcel_vs_upstream_standalone.patch
index 4ae11c0..e69de29 100644
--- a/marcel_vs_upstream_standalone.patch
+++ b/marcel_vs_upstream_standalone.patch
@@ -1,422 +0,0 @@
-diff --git a/prometheus-marcel.yaml b/prometheus-marcel.yaml
-index ddb85ff..a490a49 100644
---- a/prometheus-marcel.yaml
-+++ b/prometheus-marcel.yaml
-@@ -1,178 +1,246 @@
--<!DOCTYPE html>
--<html class="devise-layout-html" lang="en">
--<head prefix="og: http://ogp.me/ns#">
--<meta charset="utf-8">
--<meta content="IE=edge" http-equiv="X-UA-Compatible">
--<meta content="object" property="og:type">
--<meta content="GitLab" property="og:site_name">
--<meta content="Sign in" property="og:title">
--<meta content="CEE Ops GitLab" property="og:description">
--<meta content="https://gitlab.cee.redhat.com/assets/gitlab_logo-7ae504fe4f68fdebb3c2034e36621930cd36ea87924c11ff65dbcb8ed50dca58.png" property="og:image">
--<meta content="https://gitlab.cee.redhat.com/users/sign_in" property="og:url">
--<meta content="summary" property="twitter:card">
--<meta content="Sign in" property="twitter:title">
--<meta content="CEE Ops GitLab" property="twitter:description">
--<meta content="https://gitlab.cee.redhat.com/assets/gitlab_logo-7ae504fe4f68fdebb3c2034e36621930cd36ea87924c11ff65dbcb8ed50dca58.png" property="twitter:image">
-+apiVersion: template.openshift.io/v1
-+kind: Template
-+metadata:
-+  name: prometheus
-+  annotations:
-+    "openshift.io/display-name": Prometheus
-+    description: |
-+      A Prometheus deployment that can be customized to monitor components and dispatch alerts. It is secure by default and can be used to monitor arbitrary clients.
-+    iconClass: fa fa-cogs
-+    tags: "monitoring,prometheus,alertmanager,time-series"
-+parameters:
-+- description: The location of the proxy image
-+  name: IMAGE_PROXY
-+  value: openshift/oauth-proxy:v1.0.0
-+- description: The location of the prometheus image
-+  name: IMAGE_PROMETHEUS
-+  value: openshift/prometheus:v2.0.0
-+- description: The location of the alertmanager image
-+  name: IMAGE_ALERTMANAGER
-+  value: openshift/prometheus-alertmanager:v0.13.0
-+- description: The location of alert-buffer image
-+  name: IMAGE_ALERT_BUFFER
-+  value: openshift/prometheus-alert-buffer:v0.0.2
-+- description: The session secret for the proxy
-+  name: SESSION_SECRET
-+  generate: expression
-+  from: "[a-zA-Z0-9]{43}"
- 
--<title>Sign in Â· GitLab</title>
--<meta content="CEE Ops GitLab" name="description">
--<link rel="shortcut icon" type="image/x-icon" href="/assets/favicon-075eba76312e8421991a0c1f89a89ee81678bcde72319dd3e8047e2a47cd3a42.ico" />
--<link rel="stylesheet" media="all" href="/assets/application-a9a2dd7830d86db5390bab17909af7d560b2735c9eebcd549c78a20dbf95773e.css" />
--<link rel="stylesheet" media="print" href="/assets/print-9c3a1eb4a2f45c9f3d7dd4de03f14c2e6b921e757168b595d7f161bbc320fc05.css" />
--<script src="/assets/application-98bb2ecf566fa6fd22b4bc5307e77164e8e95151482096c4170c702f6db86f81.js"></script>
--<meta name="csrf-param" content="authenticity_token" />
--<meta name="csrf-token" content="gDwY1sMxVjHeQsb/KWeGI9ND6Qiw6JA+1p/ly2P58l/7d77+OxbRmlDIbZnqjFgsZOFf3OtgEHFT7zsJLPjXCA==" />
--<meta content="origin-when-cross-origin" name="referrer">
--<meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport">
--<meta content="#474D57" name="theme-color">
--<link rel="apple-touch-icon" type="image/x-icon" href="/assets/touch-icon-iphone-5a9cee0e8a51212e70b90c87c12f382c428870c0ff67d1eb034d884b78d2dae7.png" />
--<link rel="apple-touch-icon" type="image/x-icon" href="/assets/touch-icon-ipad-a6eec6aeb9da138e507593b464fdac213047e49d3093fc30e90d9a995df83ba3.png" sizes="76x76" />
--<link rel="apple-touch-icon" type="image/x-icon" href="/assets/touch-icon-iphone-retina-72e2aadf86513a56e050e7f0f2355deaa19cc17ed97bbe5147847f2748e5a3e3.png" sizes="120x120" />
--<link rel="apple-touch-icon" type="image/x-icon" href="/assets/touch-icon-ipad-retina-8ebe416f5313483d9c1bc772b5bbe03ecad52a54eba443e5215a22caed2a16a2.png" sizes="152x152" />
--<link color="rgb(226, 67, 41)" href="/assets/logo-d36b5212042cebc89b96df4bf6ac24e43db316143e89926c0db839ff694d2de4.svg" rel="mask-icon">
--<meta content="/assets/msapplication-tile-1196ec67452f618d39cdd85e2e3a542f76574c071051ae7effbfde01710eb17d.png" name="msapplication-TileImage">
--<meta content="#30353E" name="msapplication-TileColor">
-+objects:
-+- apiVersion: v1
-+  kind: ServiceAccount
-+  metadata:
-+    name: prom
-+    annotations:
-+      serviceaccounts.openshift.io/oauth-redirectreference.prom: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"prom"}}'
-+      serviceaccounts.openshift.io/oauth-redirectreference.alerts: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"prom-alerts"}}'
- 
-+# Create a fully end-to-end TLS connection to the prometheus proxy
-+- apiVersion: route.openshift.io/v1
-+  kind: Route
-+  metadata:
-+    name: prom
-+  spec:
-+    to:
-+      name: prom
-+    tls:
-+      termination: Reencrypt
-+      insecureEdgeTerminationPolicy: Redirect
-+- apiVersion: v1
-+  kind: Service
-+  metadata:
-+    annotations:
-+      prometheus.io/scrape: "true"
-+      prometheus.io/scheme: https
-+      service.alpha.openshift.io/serving-cert-secret-name: prom-tls
-+    labels:
-+      name: prom
-+    name: prom
-+  spec:
-+    ports:
-+    - name: prometheus
-+      port: 443
-+      protocol: TCP
-+      targetPort: 8443
-+    selector:
-+      app: prom
-+- apiVersion: v1
-+  kind: Secret
-+  metadata:
-+    name: prom-proxy
-+  stringData:
-+    session_secret: "${SESSION_SECRET}="
-+- apiVersion: apps/v1beta1
-+  kind: StatefulSet
-+  metadata:
-+    labels:
-+      app: prom
-+    name: prom
-+  spec:
-+    updateStrategy:
-+      type: RollingUpdate
-+    podManagementPolicy: Parallel
-+    selector:
-+      matchLabels:
-+        app: prom
-+    template:
-+      metadata:
-+        labels:
-+          app: prom
-+        name: prom
-+      spec:
-+        serviceAccountName: prom
-+        containers:
-+        # Deploy Prometheus behind an oauth proxy
-+        - name: prom-proxy
-+          image: ${IMAGE_PROXY}
-+          imagePullPolicy: IfNotPresent
-+          ports:
-+          - containerPort: 8443
-+            name: web
-+          env:
-+          - name: NAMESPACE
-+            valueFrom:
-+              fieldRef:
-+                fieldPath: metadata.namespace
-+          args:
-+          - -provider=openshift
-+          - -https-address=:8443
-+          - -http-address=
-+          - -email-domain=*
-+          - -upstream=http://localhost:9090
-+          - -client-id=system:serviceaccount:$(NAMESPACE):prom
-+          - -openshift-ca=/etc/pki/tls/cert.pem
-+          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
-+          - '-openshift-sar={"resource": "namespaces", "verb": "get", "resourceName": "$(NAMESPACE)", "namespace": "$(NAMESPACE)"}'
-+          - -tls-cert=/etc/tls/private/tls.crt
-+          - -tls-key=/etc/tls/private/tls.key
-+          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
-+          - -cookie-secret-file=/etc/proxy/secrets/session_secret
-+          - -skip-auth-regex=^/metrics
-+          volumeMounts:
-+          - mountPath: /etc/tls/private
-+            name: prometheus-tls
-+          - mountPath: /etc/proxy/secrets
-+            name: prometheus-secrets
-+          - mountPath: /prometheus
-+            name: prometheus-data
- 
-+        - name: prometheus
-+          args:
-+          - --storage.tsdb.retention=6h
-+          - --config.file=/etc/prometheus/prometheus.yml
-+          - --web.listen-address=localhost:9090
-+          image: ${IMAGE_PROMETHEUS}
-+          imagePullPolicy: IfNotPresent
-+          volumeMounts:
-+          - mountPath: /etc/prometheus
-+            name: prometheus-config
-+          - mountPath: /prometheus
-+            name: prometheus-data
- 
-+        # Deploy alertmanager behind an oauth proxy
-+        # use http port=4190 and https port=9943 to differ from prom-proxy
-+        - name: alerts-proxy
-+          image: ${IMAGE_PROXY}
-+          imagePullPolicy: IfNotPresent
-+          ports:
-+          - containerPort: 9443
-+            name: web
-+          env:
-+          - name: NAMESPACE
-+            valueFrom:
-+              fieldRef:
-+                fieldPath: metadata.namespace
-+          args:
-+          - -provider=openshift
-+          - -https-address=:9443
-+          - -http-address=
-+          - -email-domain=*
-+          - -upstream=http://localhost:9099
-+          - -client-id=system:serviceaccount:$(NAMESPACE):prom
-+          - -openshift-ca=/etc/pki/tls/cert.pem
-+          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
-+          - '-openshift-sar={"resource": "namespaces", "verb": "get", "resourceName": "$(NAMESPACE)", "namespace": "$(NAMESPACE)"}'
-+          - -tls-cert=/etc/tls/private/tls.crt
-+          - -tls-key=/etc/tls/private/tls.key
-+          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
-+          - -cookie-secret-file=/etc/proxy/secrets/session_secret
-+          volumeMounts:
-+          - mountPath: /etc/tls/private
-+            name: alerts-tls
-+          - mountPath: /etc/proxy/secrets
-+            name: alerts-secrets
- 
--</head>
-+        - name: alertmanager
-+          args:
-+          - --config.file=/etc/alertmanager/alertmanager.yml
-+          image: ${IMAGE_ALERTMANAGER}
-+          imagePullPolicy: IfNotPresent
-+          ports:
-+          - containerPort: 9093
-+            name: web
-+          volumeMounts:
-+          - mountPath: /etc/alertmanager
-+            name: alertmanager-config
-+          - mountPath: /alertmanager
-+            name: alertmanager-data
- 
--<body class="ui_charcoal login-page application navless" data-page="sessions:new">
--<div class="page-wrap">
--<script>
--//<![CDATA[
--window.gon={};gon.api_version="v3";gon.default_avatar_url="https:\/\/gitlab.cee.redhat.com\/assets\/no_avatar-849f9c04a3a0d0cea2424ae97b27447dc64a7dbfae83c036c45b403392f0e8ba.png";gon.max_file_size=10;gon.relative_url_root="";gon.shortcuts_path="\/help\/shortcuts";gon.user_color_scheme="white";gon.award_menu_url="\/emojis";
--//]]>
--</script>
--<header class="navbar navbar-fixed-top navbar-empty">
--<div class="container">
--<div class="center-logo">
--<svg width="36" height="36" class="tanuki-logo">
--  <path class="tanuki-shape tanuki-left-ear" fill="#e24329" d="M2 14l9.38 9v-9l-4-12.28c-.205-.632-1.176-.632-1.38 0z"/>
--  <path class="tanuki-shape tanuki-right-ear" fill="#e24329" d="M34 14l-9.38 9v-9l4-12.28c.205-.632 1.176-.632 1.38 0z"/>
--  <path class="tanuki-shape tanuki-nose" fill="#e24329" d="M18,34.38 3,14 33,14 Z"/>
--  <path class="tanuki-shape tanuki-left-eye" fill="#fc6d26" d="M18,34.38 11.38,14 2,14 6,25Z"/>
--  <path class="tanuki-shape tanuki-right-eye" fill="#fc6d26" d="M18,34.38 24.62,14 34,14 30,25Z"/>
--  <path class="tanuki-shape tanuki-left-cheek" fill="#fca326" d="M2 14L.1 20.16c-.18.565 0 1.2.5 1.56l17.42 12.66z"/>
--  <path class="tanuki-shape tanuki-right-cheek" fill="#fca326" d="M34 14l1.9 6.16c.18.565 0 1.2-.5 1.56L18 34.38z"/>
--</svg>
-+        restartPolicy: Always
-+        volumes:
-+        - name: prometheus-config
-+          secret:
-+            secretName: prom
-+        - name: prometheus-secrets
-+          secret:
-+            secretName: prom-proxy
-+        - name: prometheus-tls
-+          secret:
-+            secretName: prom-tls
-+        - name: prometheus-data
-+          emptyDir: {}
-+        - name: alertmanager-config
-+          secret:
-+            secretName: prom-alerts
-+        - name: alerts-secrets
-+          secret:
-+            secretName: prom-alerts-proxy
-+        - name: alerts-tls
-+          secret:
-+            secretName: prom-alerts-tls
-+        - name: alertmanager-data
-+          emptyDir: {}
- 
--</div>
--</div>
--</header>
--
--
--
--<div class="container navless-container">
--<div class="content">
--<div class="flash-container flash-container-page">
--<div class="flash-alert">
--<div class="container-fluid container-limited">
--<span>You need to sign in or sign up before continuing.</span>
--</div>
--</div>
--</div>
--
--<div class="row">
--<div class="col-sm-5 pull-right new-session-forms-container">
--<div>
--<ul class="custom-provider-tabs nav-links nav-tabs new-session-tabs">
--<li class="active">
--<a data-toggle="tab" href="#ldapmain">LDAP</a>
--</li>
--<li>
--<a data-toggle="tab" href="#ldap-standard">Standard</a>
--</li>
--</ul>
--
--<div class="tab-content">
--<div class="active login-box tab-pane" id="ldapmain" role="tabpanel">
--<div class="login-body">
--<form id="new_ldap_user" class="gl-show-field-errors" action="/users/auth/ldapmain/callback" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="9whSK0mvBeQelAyZpSuhC0NO4OFignIMsXhineZQ1JWMQ/QDsYiCT5Aep/9mwH8E9OxWNTkK8kM0CLxfqVHxwg==" /><div class="form-group">
--<label for="username">LDAP Username</label>
--<input type="text" name="username" id="username" class="form-control top" title="This field is required." autofocus="autofocus" required="required" />
--</div>
--<div class="form-group">
--<label for="password">Password</label>
--<input type="password" name="password" id="password" class="form-control bottom" title="This field is required." required="required" />
--</div>
--<div class="remember-me checkbox">
--<label for="remember_me">
--<input type="checkbox" name="remember_me" id="remember_me" value="1" />
--<span>Remember me</span>
--</label>
--</div>
--<input type="submit" name="commit" value="Sign in" class="btn-save btn" />
--</form>
--</div>
--</div>
--<div class="login-box tab-pane" id="ldap-standard" role="tabpanel">
--<div class="login-body">
--<form class="new_user gl-show-field-errors" aria-live="assertive" id="new_user" action="/users/sign_in" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="5/RmK+/tArTdr6GJiDwlVyAba27tOZo7m6IhHYCAMXmcv8ADF8qFH1MlCu9L1/tYl7nduraxGnQe0v/fz4EULg==" /><div class="form-group">
--<label for="login">Username or email</label>
--<input class="form-control top" autofocus="autofocus" autocapitalize="off" autocorrect="off" required="required" title="This field is required." type="text" name="user[login]" id="user_login" />
--</div>
--<div class="form-group">
--<label for="user_password">Password</label>
--<input class="form-control bottom" required="required" title="This field is required." type="password" name="user[password]" id="user_password" />
--</div>
--<div class="remember-me checkbox">
--<label for="user_remember_me">
--<input name="user[remember_me]" type="hidden" value="0" /><input type="checkbox" value="1" name="user[remember_me]" id="user_remember_me" />
--<span>Remember me</span>
--</label>
--<div class="pull-right forgot-password">
--<a href="/users/password/new">Forgot your password?</a>
--</div>
--</div>
--<div class="submit-container move-submit-down">
--<input type="submit" name="commit" value="Sign in" class="btn btn-save" />
--</div>
--</form>
--</div>
--</div>
--
--</div>
--<div class="clearfix">
--<div class="omniauth-container">
--<p>
--<span class="light">
--Sign in with &nbsp;
--</span>
--<span class="light">
--<a class="btn" data-no-turbolink="true" rel="nofollow" data-method="post" href="/users/auth/saml">Red Hat SAML Login</a>
--</span>
--</p>
--</div>
--
--</div>
--</div>
--
--</div>
--<div class="col-sm-7 brand-holder pull-left">
--<h1>
--CEE Ops GitLab
--</h1>
--<h3>Open source software to collaborate on code</h3>
--<p>
--Manage Git repositories with fine-grained access controls that keep your code secure.
--Perform code reviews and enhance collaboration with merge requests.
--Each project can also have an issue tracker and a wiki.
--</p>
--<p dir="auto">In case any issue(s), please report to cee-ops@redhat.com</p>
--</div>
--</div>
--</div>
--</div>
--<hr class="footer-fixed">
--<div class="container footer-container">
--<div class="footer-links">
--<a href="/explore">Explore</a>
--<a href="/help">Help</a>
--<a href="https://about.gitlab.com/">About GitLab</a>
--</div>
--</div>
--</div>
--</body>
--</html>
-+# Create a fully end-to-end TLS connection to the alert proxy
-+- apiVersion: route.openshift.io/v1
-+  kind: Route
-+  metadata:
-+    name: prom-alerts
-+  spec:
-+    to:
-+      name: prom-alerts
-+    tls:
-+      termination: Reencrypt
-+      insecureEdgeTerminationPolicy: Redirect
-+- apiVersion: v1
-+  kind: Service
-+  metadata:
-+    annotations:
-+      service.alpha.openshift.io/serving-cert-secret-name: prom-alerts-tls
-+    labels:
-+      name: prom-alerts
-+    name: prom-alerts
-+  spec:
-+    ports:
-+    - name: alerts
-+      port: 443
-+      protocol: TCP
-+      targetPort: 9443
-+    selector:
-+      app: prom
-+- apiVersion: v1
-+  kind: Secret
-+  metadata:
-+    name: prom-alerts-proxy
-+  stringData:
-+    session_secret: "${SESSION_SECRET}="
diff --git a/prometheus-marcel.yaml b/prometheus-marcel.yaml
index 22b8d0e..a490a49 100644
--- a/prometheus-marcel.yaml
+++ b/prometheus-marcel.yaml
@@ -2,64 +2,60 @@ apiVersion: template.openshift.io/v1
 kind: Template
 metadata:
   name: prometheus
-  labels:
-    app: prometheus
   annotations:
     "openshift.io/display-name": Prometheus
     description: |
-      A monitoring solution for an OpenShift cluster - collect and gather metrics from nodes, services, and the infrastructure. This is a tech preview feature.
-    iconClass: icon-cogs
-    tags: "monitoring,prometheus,time-series"
+      A Prometheus deployment that can be customized to monitor components and dispatch alerts. It is secure by default and can be used to monitor arbitrary clients.
+    iconClass: fa fa-cogs
+    tags: "monitoring,prometheus,alertmanager,time-series"
 parameters:
-- description: The namespace to instantiate prometheus under. Defaults to 'kube-system'.
-  name: NAMESPACE
-  value: kube-system
 - description: The location of the proxy image
   name: IMAGE_PROXY
   value: openshift/oauth-proxy:v1.0.0
 - description: The location of the prometheus image
   name: IMAGE_PROMETHEUS
-  value: openshift/prometheus:v2.0.0-dev
+  value: openshift/prometheus:v2.0.0
+- description: The location of the alertmanager image
+  name: IMAGE_ALERTMANAGER
+  value: openshift/prometheus-alertmanager:v0.13.0
+- description: The location of alert-buffer image
+  name: IMAGE_ALERT_BUFFER
+  value: openshift/prometheus-alert-buffer:v0.0.2
 - description: The session secret for the proxy
   name: SESSION_SECRET
   generate: expression
   from: "[a-zA-Z0-9]{43}"
+
 objects:
-# Authorize the prometheus service account to read data about the cluster
 - apiVersion: v1
   kind: ServiceAccount
   metadata:
-    labels:
-      app: prometheus
-    name: prometheus
-    namespace: "${NAMESPACE}"
+    name: prom
     annotations:
-      serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"prometheus"}}'
-# Create a fully end-to-end TLS connection to the proxy
+      serviceaccounts.openshift.io/oauth-redirectreference.prom: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"prom"}}'
+      serviceaccounts.openshift.io/oauth-redirectreference.alerts: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"prom-alerts"}}'
+
+# Create a fully end-to-end TLS connection to the prometheus proxy
 - apiVersion: route.openshift.io/v1
   kind: Route
   metadata:
-    labels:
-      app: prometheus
-    name: prometheus
-    namespace: "${NAMESPACE}"
+    name: prom
   spec:
     to:
-      name: prometheus
+      name: prom
     tls:
       termination: Reencrypt
+      insecureEdgeTerminationPolicy: Redirect
 - apiVersion: v1
   kind: Service
   metadata:
     annotations:
       prometheus.io/scrape: "true"
       prometheus.io/scheme: https
-      service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
+      service.alpha.openshift.io/serving-cert-secret-name: prom-tls
     labels:
-      app: prometheus
-      name: prometheus
-    name: prometheus
-    namespace: "${NAMESPACE}"
+      name: prom
+    name: prom
   spec:
     ports:
     - name: prometheus
@@ -67,50 +63,56 @@ objects:
       protocol: TCP
       targetPort: 8443
     selector:
-      app: prometheus
+      app: prom
 - apiVersion: v1
   kind: Secret
   metadata:
-    labels:
-      app: prometheus
-    name: prometheus-proxy
-    namespace: "${NAMESPACE}"
+    name: prom-proxy
   stringData:
     session_secret: "${SESSION_SECRET}="
-# Deploy Prometheus behind an oauth proxy
-- apiVersion: extensions/v1beta1
-  kind: Deployment
+- apiVersion: apps/v1beta1
+  kind: StatefulSet
   metadata:
     labels:
-      app: prometheus
-    name: prometheus
-    namespace: "${NAMESPACE}"
+      app: prom
+    name: prom
   spec:
-    replicas: 1
+    updateStrategy:
+      type: RollingUpdate
+    podManagementPolicy: Parallel
     selector:
       matchLabels:
-        app: prometheus
+        app: prom
     template:
       metadata:
         labels:
-          app: prometheus
-        name: prometheus
+          app: prom
+        name: prom
       spec:
-        serviceAccountName: prometheus
+        serviceAccountName: prom
         containers:
-        - name: oauth-proxy
+        # Deploy Prometheus behind an oauth proxy
+        - name: prom-proxy
           image: ${IMAGE_PROXY}
           imagePullPolicy: IfNotPresent
           ports:
           - containerPort: 8443
             name: web
+          env:
+          - name: NAMESPACE
+            valueFrom:
+              fieldRef:
+                fieldPath: metadata.namespace
           args:
           - -provider=openshift
           - -https-address=:8443
+          - -http-address=
           - -email-domain=*
           - -upstream=http://localhost:9090
-          - -client-id=system:serviceaccount:${NAMESPACE}:prometheus
-          - '-openshift-sar={"namespace": "${NAMESPACE}", "verb": "list", "resource": "services"}'
+          - -client-id=system:serviceaccount:$(NAMESPACE):prom
+          - -openshift-ca=/etc/pki/tls/cert.pem
+          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
+          - '-openshift-sar={"resource": "namespaces", "verb": "get", "resourceName": "$(NAMESPACE)", "namespace": "$(NAMESPACE)"}'
           - -tls-cert=/etc/tls/private/tls.crt
           - -tls-key=/etc/tls/private/tls.key
           - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
@@ -120,7 +122,9 @@ objects:
           - mountPath: /etc/tls/private
             name: prometheus-tls
           - mountPath: /etc/proxy/secrets
-            name: secrets
+            name: prometheus-secrets
+          - mountPath: /prometheus
+            name: prometheus-data
 
         - name: prometheus
           args:
@@ -131,62 +135,112 @@ objects:
           imagePullPolicy: IfNotPresent
           volumeMounts:
           - mountPath: /etc/prometheus
-            name: config-volume
+            name: prometheus-config
           - mountPath: /prometheus
-            name: data-volume
+            name: prometheus-data
+
+        # Deploy alertmanager behind an oauth proxy
+        # use http port=4190 and https port=9943 to differ from prom-proxy
+        - name: alerts-proxy
+          image: ${IMAGE_PROXY}
+          imagePullPolicy: IfNotPresent
+          ports:
+          - containerPort: 9443
+            name: web
+          env:
+          - name: NAMESPACE
+            valueFrom:
+              fieldRef:
+                fieldPath: metadata.namespace
+          args:
+          - -provider=openshift
+          - -https-address=:9443
+          - -http-address=
+          - -email-domain=*
+          - -upstream=http://localhost:9099
+          - -client-id=system:serviceaccount:$(NAMESPACE):prom
+          - -openshift-ca=/etc/pki/tls/cert.pem
+          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
+          - '-openshift-sar={"resource": "namespaces", "verb": "get", "resourceName": "$(NAMESPACE)", "namespace": "$(NAMESPACE)"}'
+          - -tls-cert=/etc/tls/private/tls.crt
+          - -tls-key=/etc/tls/private/tls.key
+          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
+          - -cookie-secret-file=/etc/proxy/secrets/session_secret
+          volumeMounts:
+          - mountPath: /etc/tls/private
+            name: alerts-tls
+          - mountPath: /etc/proxy/secrets
+            name: alerts-secrets
+
+        - name: alertmanager
+          args:
+          - --config.file=/etc/alertmanager/alertmanager.yml
+          image: ${IMAGE_ALERTMANAGER}
+          imagePullPolicy: IfNotPresent
+          ports:
+          - containerPort: 9093
+            name: web
+          volumeMounts:
+          - mountPath: /etc/alertmanager
+            name: alertmanager-config
+          - mountPath: /alertmanager
+            name: alertmanager-data
 
         restartPolicy: Always
         volumes:
-        - configMap:
-            defaultMode: 420
-            name: prometheus
-          name: config-volume
-        - name: secrets
+        - name: prometheus-config
           secret:
-            secretName: prometheus-proxy
+            secretName: prom
+        - name: prometheus-secrets
+          secret:
+            secretName: prom-proxy
         - name: prometheus-tls
           secret:
-            secretName: prometheus-tls
-        - emptyDir: {}
-          name: data-volume
+            secretName: prom-tls
+        - name: prometheus-data
+          emptyDir: {}
+        - name: alertmanager-config
+          secret:
+            secretName: prom-alerts
+        - name: alerts-secrets
+          secret:
+            secretName: prom-alerts-proxy
+        - name: alerts-tls
+          secret:
+            secretName: prom-alerts-tls
+        - name: alertmanager-data
+          emptyDir: {}
+
+# Create a fully end-to-end TLS connection to the alert proxy
+- apiVersion: route.openshift.io/v1
+  kind: Route
+  metadata:
+    name: prom-alerts
+  spec:
+    to:
+      name: prom-alerts
+    tls:
+      termination: Reencrypt
+      insecureEdgeTerminationPolicy: Redirect
 - apiVersion: v1
-  kind: ConfigMap
+  kind: Service
   metadata:
+    annotations:
+      service.alpha.openshift.io/serving-cert-secret-name: prom-alerts-tls
     labels:
-      app: prometheus
-    name: prometheus
-    namespace: "${NAMESPACE}"
-  data:
-    prometheus.yml: |
-      # A scrape configuration for running Prometheus on a Kubernetes cluster.
-      # This uses separate scrape configs for cluster components (i.e. API server, node)
-      # and services to allow each to use different authentication configs.
-      #
-      # Kubernetes labels will be added as Prometheus labels on metrics via the
-      # `labelmap` relabeling action.
-
-      # Scrape config for API servers.
-      #
-      # Kubernetes exposes API servers as endpoints to the default/kubernetes
-      # service so this uses `endpoints` role and uses relabelling to only keep
-      # the endpoints associated with the default/kubernetes service using the
-      # default named port `https`. This works for single API server deployments as
-      # well as HA API server deployments.
-      scrape_configs:
-      - job_name: 'prometheus'
-        # Override the global default and scrape targets from this job every 5 seconds.
-        scrape_interval: 5s
-        static_configs:
-          - targets: ['localhost:9090']
-      - job_name: 'remote-storage-adapter'
-        # Override the global default and scrape targets from this job every 5 seconds.
-        scrape_interval: 5s
-        static_configs:
-          - targets: ['prometheus-remote-storage-adapter:9201']
-
-      # Remote write configuration (for Graphite, OpenTSDB, or InfluxDB).
-      remote_write:
-        - url: "http://prometheus-remote-storage-adapter:9201/write"
-      # Remote read configuration (for InfluxDB only at the moment).
-      remote_read:
-        - url: "http://prometheus-remote-storage-adapter:9201/read"
+      name: prom-alerts
+    name: prom-alerts
+  spec:
+    ports:
+    - name: alerts
+      port: 443
+      protocol: TCP
+      targetPort: 9443
+    selector:
+      app: prom
+- apiVersion: v1
+  kind: Secret
+  metadata:
+    name: prom-alerts-proxy
+  stringData:
+    session_secret: "${SESSION_SECRET}="
